如果需要为ProductList类更换一个迭代器，
只需要增加一个新的具体迭代器类作为抽象迭代器类的子类，
重新实现遍历方法，原有迭代器代码无须修改，也符合“开闭原则”；
但是如果要在迭代器中增加新的方法，
则需要修改抽象迭代器源代码，这将违背“开闭原则”。


在迭代器模式结构图中，我们可以看到具体迭代器类和具体聚合类之间存在双重关系，
其中一个关系为关联关系，在具体迭代器中需要维持一个对具体聚合对象的引用，
该关联关系的目的是访问存储在聚合对象中的数据，以便迭代器能够对这些数据进行遍历操作。

除了使用关联关系外，为了能够让迭代器可以访问到聚合对象中的数据，
我们还可以将迭代器类设计为聚合类的内部类，JDK中的迭代器类就是通过这种方法来实现的。
