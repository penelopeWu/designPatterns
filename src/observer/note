观察者模式包含观察目标和观察者两类对象，
一个目标可以有任意数目的与之相依赖的观察者，
一旦观察目标的状态发生改变，所有的观察者都将得到通知。
作为对这个通知的响应，每个观察者都将监视观察目标的状态以使其状态与目标状态同步，
这种交互也称为发布-订阅(Publish-Subscribe)。观察目标是通知的发布者，
它发出通知时并不需要知道谁是它的观察者，可以有任意数目的观察者订阅它并接收通知。

在有些更加复杂的情况下，
具体观察者类ConcreteObserver的update()方法在执行时,
需要使用到具体目标类ConcreteSubject中的状态（属性），
因此在ConcreteObserver与ConcreteSubject之间有时候还存在关联或依赖关系，
在ConcreteObserver中定义一个ConcreteSubject实例，
通过该实例获取存储在ConcreteSubject中的状态。
如果ConcreteObserver的update()方法不需要使用到ConcreteSubject中的状态属性，
则可以对观察者模式的标准结构进行简化，
在具体观察者ConcreteObserver和具体目标ConcreteSubject之间无须维持对象引用。
如果在具体层具有关联关系，系统的扩展性将受到一定的影响，
增加新的具体目标类有时候需要修改原有观察者的代码，在一定程度上违反了“开闭原则”，
但是如果原有观察者类无须关联新增的具体目标，则系统扩展性不受影响。